---
format:
  revealjs: 
    theme: simple
    slide-number: true
    preview-links: auto
    footer: "Source code for the slides can be found [here](https://github.com/IndrajeetPatil/preventive-r-package-care/){target='_blank'}."
execute:
  echo: true
keywords: ["software-engineering", "r-packages", "best-practices", "CRAN"]
---

## Preventive Care for R Packages {style="text-align: center;"}

<!-- Don't render this file manually. Run `renderer.R` script instead. -->

::: {style="text-align: center;"}

Indrajeet Patil

:::


<!-- ::: {style="margin-top: 10em; font-size:0.75em"} -->

<!-- - [Link to slides](https://indrajeetpatil.github.io/preventive-r-package-care/) -->
<!-- - [Github repo](https://github.com/IndrajeetPatil/preventive-r-package-care/) -->

<!-- ::: -->

<!-- ![](media/plant.png){.absolute width="900" height="500" left="70" top="155"} -->

<!-- Need to install extension from https://github.com/quarto-ext/fontawesome -->
<!-- Run `quarto install extension quarto-ext/fontawesome` in terminal -->

# "Software engineering ought to produce sustainability." 
\- Mark Seemann (*Code That Fits in Your Head*)

# Who is this presentation for?

Specifying the intended audience early-on to check relevance of the content for you.

# Before we begin

Don't miss the forest for the trees and dismiss this as irrelevant.

## 

:::{.callout-important}

## Choose your own toolkit

I will rely heavily on GitHub as the hosting platform and GitHub Actions as the CI/CD framework. Even if you use neither, don't feel that this is not relevant for you.

At the end of each section, I will include a checklist with broader takeaways that are independent of the tech stack used for development. You can implement the necessary checks with the tools you prefer.

:::

:::{.callout-note}

## More than CRAN

Following advice mentioned in these slides will make your packages more robust to CRAN archival, but that's *incidental*. You should follow these practices even if you never plan to submit your package to CRAN.

:::

# Documentation

## Working examples

Make sure *all* examples work.

## Prevent link rot {.smaller}

If the package documentation includes hyperlinks to external resources, make sure that they are still valid and not dangling.

Link rot can happen because web pages move to different addresses or become permanently unavailable.

## HTML5 check

## Spell check

## Check example coverage

## Up-to-date README

All code runs successfully.

## Checklist

# Dependency management

## "noSuggests" check

## "noSuggests" pkgdown

# Unit testing

# Turn warnings into errors

# Precommit

# Benchmarking

Touchstone framework

# Check against devel versions of dependencies

# Check on multiple R versions and platforms

# Fail on NOTE

# For more

If you are interested in reading more of my slide decks on related topics, visit [this](https://sites.google.com/site/indrajeetspatilmorality/presentations){target="_blank"} page.

# Find me at...

{{< fa brands twitter >}} [Twitter](http://twitter.com/patilindrajeets){target="_blank"}

{{< fa brands linkedin >}} [LikedIn](https://www.linkedin.com/in/indrajeet-patil-397865174/){target="_blank"}

{{< fa brands github >}} [GitHub](http://github.com/IndrajeetPatil){target="_blank"}

{{< fa solid link >}} [Website](https://sites.google.com/site/indrajeetspatilmorality/){target="_blank"}

{{< fa solid envelope >}} [E-mail](mailto:patilindrajeet.science@gmail.com){target="_blank"}

# Thank You 

And Happy Caring for Your Packages! ðŸ˜Š

## Session information {.smaller}

```{r}
sessioninfo::session_info(include_base = TRUE)
```

