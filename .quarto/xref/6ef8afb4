{"headings":["preventive-care-for-r-packages","software-engineering-ought-to-produce-sustainability.","target-audience","before-we-begin","section","iconography","digging-the-pit-of-success","be-always-release-ready","fighting-software-entropy","the-only-way-to-go-fast-is-to-go-well.","r-package-development","plan","checklist-for-documentation","checklist-for-exception-handling","checklist-for-portability","checklist-for-code-quality","checklist-for-dependency-management","documentation","incorrect-documentation-is-often-worse-than-no-documentation.","section-1","make-sure-there-are-enough-examples-in-the-documentation.","an-example-is-worth-a-thousand-words","sources-of-documentation","maintaining-example-code-coverage","make-sure-all-readme-examples-are-working.","readme-documentation","detecting-broken-readme-examples","make-sure-all-examples-in-help-pages-are-working.","broken-examples-in-help-pages","checking-all-examples","make-sure-examples-in-all-vignettes-are-working.","vignette-examples","building-all-vignettes","make-sure-all-urls-are-valid.","what-is-link-rot","detecting-link-rot","make-sure-there-are-no-spelling-mistakes.","spelling-mistakes","creating-a-list-of-allowed-misspellings","detecting-spelling-mistakes","make-sure-all-html-in-the-help-pages-is-valid.","html5-check","detecting-invalid-html","checklist-for-documentation-1","warnings","there-is-a-problem-with-warnings.-no-one-reads-them.","section-2","sending-signals","a-needle-in-the-haystack","suppressing-intrinsic-warnings","suppressing-extrinsic-warnings","detecting-warnings","checklist-for-exception-handling-1","portability","each-new-user-of-a-new-system-uncovers-a-new-class-of-bugs.","section-3","the-unbearable-diversity-of-contexts","checking-across-multiple-settings","checklist-for-portability-1","codequality","dont-comment-bad-coderewrite-it.","section-4","make-sure-the-code-follows-a-style-guide.","code-formatting","following-style-guide","make-sure-there-are-no-known-code-quality-issues.","code-quality-assessment","detecting-lints","detecting-issues-with-non-r-code","make-sure-there-are-no-performance-regressions.","dont-slow-it-down","detecting-performance-regressions","checklist-for-code-quality-1","dependency","dependencies-are-invitations-for-other-people-to-break-your-package.","section-5","types-of-dependencies","make-sure-soft-dependencies-are-used-conditionally.","soft-dependency-hygiene","conditional-dependency-usage","checking-conditional-usage","special-care-for-examples","anticipating-breakages","detecting-breakages-early","checklist-for-dependency-management-1","eco-friendly-workflows","skipping-workflows","caveats","using-workflows-flexibly","failure-is-the-only-option","later-equals-never.","managing-technical-debt","easing-into-it","conclusion","further-reading","section-6","r-specific","language-agnostic","section-7","for-more","acknowledgements","find-me-at","thank-you","session-information"],"entries":[]}